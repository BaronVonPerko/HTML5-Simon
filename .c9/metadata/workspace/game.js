{"filter":false,"title":"game.js","tooltip":"/game.js","undoManager":{"mark":0,"position":0,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":225,"column":11},"action":"insert","lines":["// Main Game Object","var game = {","\twidth: 650,","\theight: 350,","\tcolors: ['#660000', '#006600', '#000066', '#660066'],","\tcolorsPressed: ['#ff0000', '#00ff00', '#0000ff', '#ff00ff'],","\tbuttons: [],","\tsequence: [],","\tinputSequence: [],","\tsimonSpeed: 1000,","\tphase: 1 // phase 1 = simon, phase 2 = displaying sequence, phase 3 = player's turn, phase 4 = game over","};","","","","function init() {","\t// setup the canvas and context","\tgame.canvas = document.getElementById(\"game_canvas\");","\tgame.canvas.setAttribute('width', game.width);","\tgame.canvas.setAttribute('height', game.height);","\tgame.canvas.style.width = game.width + \"px\";","\tgame.canvas.style.height = game.height + \"px\";","","\tgame.context = game.canvas.getContext(\"2d\");","","\tgame.buttonWidth = game.width / 2;","\tgame.buttonHeight = game.height / 2;","","\tinitButtons();","","\t// setup mouse listener","\tgame.canvas.addEventListener('click', function(evt) {","\t\tvar rect = game.canvas.getBoundingClientRect();","\t\tmouseHandler(evt.clientX - rect.left, evt.clientY - rect.top);","\t}, false);","}","","function initButtons() {","\tvar button0 = new game.button(","\t\t0,","\t\t0,","\t\tgame.buttonWidth,","\t\tgame.buttonHeight,","\t\tgame.colors[0],","\t\tgame.colorsPressed[0],","\t\t0);","","\tgame.buttons.push(button0);","","\tvar button1 = new game.button(","\t\tgame.buttonWidth,","\t\t0,","\t\tgame.buttonWidth,","\t\tgame.buttonHeight,","\t\tgame.colors[1],","\t\tgame.colorsPressed[1],","\t\t1);","","\tgame.buttons.push(button1);","","\tvar button2 = new game.button(","\t\t0,","\t\tgame.buttonHeight,","\t\tgame.buttonWidth,","\t\tgame.buttonHeight,","\t\tgame.colors[2],","\t\tgame.colorsPressed[2],","\t\t2);","","\tgame.buttons.push(button2);","","\tvar button3 = new game.button(","\t\tgame.buttonWidth,","\t\tgame.buttonHeight,","\t\tgame.buttonWidth,","\t\tgame.buttonHeight,","\t\tgame.colors[3],","\t\tgame.colorsPressed[3],","\t\t3);","","\tgame.buttons.push(button3);","}","","function mouseHandler(x, y) {","\tif(game.phase !== 3) {","\t\treturn;  // no mouse input if not the player's turn","\t}","\t\t","\tfor(var b in game.buttons) {","\t\tvar btn = game.buttons[b];","\t\tif(x > btn.x && x < btn.x + btn.width && y > btn.y && y < btn.y + btn.height) {","\t\t\tbtn.click();","\t\t}","\t}","}","","","function gameLoop() {","\tupdate();","\trender();","","\trequestAnimationFrame(gameLoop);","}","","","function update() {","\tif(game.phase === 4) {","\t\treturn; // game is over, no more update","\t}\t","\t","\tif (game.phase === 1) {","\t\tsimonPhase();","\t}","\t","\tif(game.phase === 3) {","\t\t\tsetTimeout(function() {","\t\t\t\t\tfor(var b in game.buttons) {","\t\t\t\t\t\tgame.buttons[b].lit = false;","\t\t\t\t\t}","\t\t\t}, 250);","\t}","\t\t","\tif(game.inputSequence.length === game.sequence.length) {","\t\tgame.phase = 1; // simon's turn","\t\tgame.inputSequence = [];","\t\tconsole.log('simon\\'s turn');","\t}","}","","function simonPhase() {","\tgenerateNextColor();\t","\t\tgame.simonSpeed -= 50;","\t\tif(game.simonSpeed < 400) {","\t\t\t\tgame.simonSpeed = 400;","\t\t}","\tsetTimeout(function() {displaySequence();}, game.simonSpeed);","}","","function generateNextColor() {","\tvar code = Math.floor((Math.random() * 4));","\tgame.sequence.push(code);","\tgame.phase = 2;","}","","function displaySequence(n) {","\tvar code;","\tif(n === undefined) { n = 0; }","\t\t","\tcode = game.sequence[n];","\tconsole.log('lighting ' + code);","\t\t","\t// light up the button that matches the code in the sequence","\tfor (var b in game.buttons) {","\t\tvar button = game.buttons[b];","\t\tif (button.numberCode === code) {","\t\t\tbutton.lit = true;","\t  }","  }","","\t// light up the next in the sequence","\tsetTimeout(function() {","\t\tunlightAll();","\t\t","\t\tif(n < game.sequence.length-1) {","\t\t\tsetTimeout(function() {displaySequence(n+1);}, 100); // allow the buttons to un-light in case of same color back to back","\t\t}","\t\telse {","\t\t\tgame.phase = 3;","\t\t\tconsole.log('player turn');","\t\t}","\t}, game.simonSpeed);","}","","function unlightAll() {","\tfor(var b in game.buttons) {","\t\tgame.buttons[b].lit = false;","\t}","}","","function render() {","\tgame.context.clearRect(0, 0, game.width, game.height);","","\tfor (var b in game.buttons) {","\t\tgame.buttons[b].render();","\t}","}","","","","// Game Objects","////////////////////////////","game.button = function(x, y, width, height, color, colorPressed, numberCode) {","\tthis.x = x;","\tthis.y = y;","\tthis.width = width;","\tthis.height = height;","\tthis.color = color;","\tthis.colorPressed = colorPressed;","\tthis.numberCode = numberCode;","\tthis.lit = false;","","\tthis.render = function() {","\t\tif (this.lit) {","\t\t\tgame.context.fillStyle = this.colorPressed;","\t\t} else {","\t\t\tgame.context.fillStyle = this.color;","\t\t}","\t\tgame.context.fillRect(this.x, this.y, this.width, this.height);","\t};","\t\t","\tthis.click = function() {","\t\tthis.lit = true;","\t\tgame.inputSequence.push(this.numberCode);","\t\tif(game.inputSequence[game.inputSequence.length] !== game.sequence[game.inputSequence.length]) {","\t\t\tphase = 4; // game over","\t\t\tconsole.log('game over');","\t\t}","\t};","};","","","","// Start the game!","////////////////////////////////////////////////","init();","gameLoop();"]}]}]]},"ace":{"folds":[],"scrolltop":2542,"scrollleft":0,"selection":{"start":{"row":225,"column":11},"end":{"row":225,"column":11},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":180,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1421785710240,"hash":"46230f388f632e2b388e10b3d28b34451914de6c"}